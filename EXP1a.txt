
#include <stdio.h>
#include <stdlib.h>  // For exit() function

#define MAX 10

void create();
void insert();
void delete();
void search();
void display();

int arr[MAX], size = 0;

int main() {
    int choice;
    char cont = 'y';

    while (cont == 'y' || cont == 'Y') {
        printf("\nMain Menu");
        printf("\n1. Create");
        printf("\n2. Delete");
        printf("\n3. Search");
        printf("\n4. Insert");
        printf("\n5. Display");
        printf("\n6. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                create();
                break;
            case 2:
                delete();
                break;
            case 3:
                search();
                break;
            case 4:
                insert();
                break;
            case 5:
                display();
                break;
            case 6:
                exit(0);
            default:
                printf("\nInvalid choice, please try again.");
        }

        printf("\nDo you want to continue? (y/n): ");
        scanf(" %c", &cont);  // Notice the space before %c to consume any leftover newline character
    }

    return 0;
}

void create() {
    printf("\nEnter the number of elements (max %d): ", MAX);
    scanf("%d", &size);
    
    if (size > MAX) {
        printf("\nSize exceeds the maximum limit of %d.\n", MAX);
        size = MAX;
    }

    for (int i = 0; i < size; i++) {
        printf("Enter element %d: ", i + 1);
        scanf("%d", &arr[i]);
    }
}

void insert() {
    int position, value;

    if (size >= MAX) {
        printf("\nList is full.\n");
        return;
    }

    printf("\nEnter position to insert (0 to %d): ", size);
    scanf("%d", &position);

    if (position < 0 || position > size) {
        printf("\nInvalid position.\n");
        return;
    }

    for (int i = size; i > position; i--) {
        arr[i] = arr[i - 1];
    }

    printf("Enter value to insert: ");
    scanf("%d", &value);
    arr[position] = value;
    size++;
    
    printf("\nThe list after insertion:\n");
    display();
}

void delete() {
    int position;

    if (size == 0) {
        printf("\nList is empty.\n");
        return;
    }

    printf("\nEnter position to delete (0 to %d): ", size - 1);
    scanf("%d", &position);

    if (position < 0 || position >= size) {
        printf("\nInvalid position.\n");
        return;
    }

    for (int i = position; i < size - 1; i++) {
        arr[i] = arr[i + 1];
    }

    size--;
    
    printf("\nThe list after deletion:\n");
    display();
}

void search() {
    int value, found = 0;

    printf("\nEnter value to search: ");
    scanf("%d", &value);

    for (int i = 0; i < size; i++) {
        if (arr[i] == value) {
            printf("Value %d found at position %d.\n", value, i);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Value %d not found in the list.\n", value);
    }
}

void display() {
    printf("\nList elements are:\n");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}


